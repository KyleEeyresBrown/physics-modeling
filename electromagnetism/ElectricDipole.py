#Thus program simulates the field generated by an electric dipole

from visual import*

#Definiton of important constants
kcoulomb=9e9
qproton=1.6e-19
E_scale=4e-22
print qproton
print "The charge of a proton is", qproton, "Coulombs."

#Definition of the charges
minus4=sphere(pos=vector(0,-2e-10,0),radius=1e-11,color=color.white,q=-qproton)
minus3=sphere(pos=vector(0,2e-10,0),radius=1e-11,color=color.white,q=-qproton)
minus2=sphere(pos=vector(-2e-10,0,0),radius=1e-11,color=color.white,q=-qproton)
minus=sphere(pos=vector(2e-10,0,0),radius=1e-11,color=color.white,q=-qproton)
proton = sphere(pos=(3e-10,3e-10, 4e-10),radius = 1e-11, color=color.cyan, q=1.6e-19,m=1.7e-27, p = vector(0,0,0), trail = curve(color = color.white))
dipole=[minus,minus2,minus3,minus4]

#Definition of the grid of points at which to calculate the field
locations=[]
dx=1e-10
dy=1e-10
dz=1e-10

for x in arange(-4.5e-10,4.5e-10+dx,dx):
    for y in arange(-4.5e-10,4.5e-10+dy,dy):
        for z in arange(-4.5e-10,4.5e-10+dz,dz):
            a=vector(x,y,z)
            locations.append(a)

#Routine to calculate the electric field
for point in locations:
    E=vector(0,0,0)
    for charge in dipole:
        r=point-charge.pos
        rmag=sqrt(r.x**2+r.y**2+r.z**2)
        rhat=r/rmag
        E=E+(kcoulomb*charge.q)/((rmag)**2)*rhat
        #print"The relative position vector is",r
        #print"The magnitude of the relative position vector is", rmag
        #pos_arrow=arrow(pos=plus.pos,axis=r,color=color.white,shaftwidth=1e-11)
        #print"The value of the electric field due to the positive charge is", E
    #E_arrow=arrow(pos=point,axis=E_scale*E,color=color.yellow)

#Simulate the trajectory of a proton
dt = 1e-17
t=0
while t < 3e-12:
    rate(1000)
    t = t + dt
    E = vector(0,0,0)
    for charge in dipole:
        r = proton.pos - charge.pos
        E = E + kcoulomb * charge.q * norm(r) / mag(r)**2
        F = proton.q * E
        proton.p = proton.p + F * dt
        proton.pos = proton.pos + (proton.p / proton.m) * dt
        proton.trail.append(proton.pos)



    
